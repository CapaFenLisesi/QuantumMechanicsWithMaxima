
Maxima 5.41.0 http://maxima.sourceforge.net
using Lisp GNU Common Lisp (GCL) GCL 2.6.12
Distributed under the GNU Public License. See the file COPYING.
Dedicated to the memory of William Schelter.
The function bug_report() provides bug reporting information.
(%i1) batch("hw4.max")

read and interpret file: #p/home/andrew/Documents/phys324/hw4.max
(%i2) set_plot_option([color,black])
(%o2) [[plot_format, gnuplot_pipes], [grid, 30, 30], [run_viewer, true], 
[axes, true], [nticks, 29], [adapt_depth, 5], [color, black], 
[point_type, bullet, box, triangle, plus, times, asterisk], 
[palette, [gradient, green, cyan, blue, violet], 
[gradient, magenta, violet, blue, cyan, green, yellow, orange, red, brown, 
black]], [gnuplot_preamble, ], [gnuplot_term, default]]
(%i3) psi1(x):=L*(1+exp(2*k*a))*exp(k*x)
(%i4) psi2(x):=2*L*cosh(k*x)
(%i5) psi3(x):=L*(1+exp(2*k*a))*exp((-k)*x)
(%i6) psi(x):=charfun(x < -a)*psi1(x)+charfun(x >= -a and x <= a)*psi2(x)
          +charfun(x > a)*psi3(x)
(%i7) plot2d(subst([L = 1,a = 3,k = 1],psi(x)),[x,-9,9],[y,-2,25],
             [png_file,"./even.png"],[axes,solid],[box,false],[xtics,0,0,0],
             [ytics,0,0,0])
(%i8) psi1(x):=L*(1-exp(2*k*a))*exp(k*x)
(%i9) psi2(x):=2*L*sinh(k*x)
(%i10) psi3(x):=(-L)*(1-exp(2*k*a))*exp((-k)*x)
(%i11) plot2d(subst([L = 1,a = 3,k = 1],psi(x)),[x,-9,9],[y,-25,25],
              [png_file,"./odd.png"],[box,false],[axes,solid],[xtics,0,0,0],
              [ytics,0,0,0])
(%i12) a*k-1 = exp((-2)*k*a)
(%i13) ev(eq:%,k = z/(2*a))
(%i14) z_even:find_root(eq,z,2,3)
(%o14)                         2.21771510575709
(%i15) plot2d([lhs(eq),rhs(eq)],[z,0,3],[png_file,"./even_solution.png"],
              [box,false],[legend,false])
(%i16) 1-a*k = exp((-2)*k*a)
(%i17) ev(eq:%,k = z/(2*a))
(%i18) z_odd:find_root(eq,z,1,2)
(%o18)                         1.59362426004004
(%i19) plot2d([lhs(eq),rhs(eq)],[z,0,3],[png_file,"./odd_solution.png"],
              [box,false],[legend,false])
(%i20) k(z):=z/(2*a)
(%i21) E(k):=(((-%hbar^2)*k^2)/2)/m
(%i22) E(k(z_even))
                                                    2
                            0.6147825362878978 %hbar
(%o22)                    - -------------------------
                                       2
                                      a  m
(%i23) E(k(z_odd))
                                                    2
                            0.3174547852735206 %hbar
(%o23)                    - -------------------------
                                       2
                                      a  m
(%i24) q:(2*m*%alpha)/%hbar^2
(%i25) eq1:A*exp((-%i)*k*a)+B*exp(%i*k*a) = C*exp((-%i)*k*a)+D*exp(%i*k*a)
(%i26) eq2:C*exp(%i*k*a)+D*exp((-%i)*k*a) = F*exp(%i*k*a)
(%i27) eq3:%i*k
             *(C*exp((-%i)*k*a)-D*exp(%i*k*a)+(-A)*exp((-%i)*k*a)
                               +B*exp(%i*k*a))
            = (-%q)*(A*exp((-%i)*k*a)+B*exp(%i*k*a))
(%i28) eq4:%i*k*(F*exp(%i*k*a)-C*exp(%i*k*a)+D*exp((-%i)*k*a))
            = (-%q)*F*exp(%i*k*a)
(%i29) solve([eq1,eq2,eq3,eq4],[B,C,D,F])
                              2    4 %i a k                    2
             A (2 %i %q k - %q ) %e         + A (2 %i %q k + %q )
(%o29) [[B = ----------------------------------------------------, 
               2   6 %i a k       2                 2    2 %i a k
             %q  %e         + (4 k  - 4 %i %q k - %q ) %e
                   2
             A (4 k  - 2 %i %q k)
C = ---------------------------------------, 
      2   4 %i a k      2                 2
    %q  %e         + 4 k  - 4 %i %q k - %q
                          2 %i a k
            2 %i %q A k %e
D = ---------------------------------------, 
      2   4 %i a k      2                 2
    %q  %e         + 4 k  - 4 %i %q k - %q
                         2
                    4 A k
F = ---------------------------------------]]
      2   4 %i a k      2                 2
    %q  %e         + 4 k  - 4 %i %q k - %q
(%i30) my_preamble:"set xtics ('π/2' 1.5708, 'π' 3.1415, '3π/2' 4.712, '2π' 6.283, '5π/2' 7.854, '3π' 9.425)"
(%i31) f(z,z_0):=((-1)/sqrt((z_0/z)^2-1))*sqrt(z/abs(z))
                                     - 1                z
(%o31)           f(z, z_0) := (----------------) sqrt(------)
                                     z_0 2            abs(z)
                               sqrt((---)  - 1)
                                      z
(%i32) plot2d([tan(x),f(x,%pi/2),f(x,5),f(x,25)],[x,-1,3.1*%pi],[y,-2,2],
              [axes,x],[axes,solid],[color,black],
              [gnuplot_preamble,my_preamble],[png_file,"./odd_states.png"],
              [box,false],[legend,false])
plot2d: some values were clipped.
plot2d: expression evaluates to non-numeric value somewhere in plotting range.
plot2d: some values were clipped.
plot2d: expression evaluates to non-numeric value somewhere in plotting range.
plot2d: some values were clipped.
plot2d: expression evaluates to non-numeric value somewhere in plotting range.
(%o32)           [/tmp/maxout31596.gnuplot, ./odd_states.png]
(%o32)                              hw4.max
